//
// Mixins
// --------------------------------------------------


// GRADIENTS
// --------------------------------------------------

#gradient {

  // Top and Bottom gradient
  //
  // Creates the same gradient and the top and bottom and uses the background color for the field.
  .top-and-bottom(@start-color: @gray-lighter; @end-color: #f5f5f5; @start-percent: 0%; @end-percent: 100%) {
    background-color: @end-color;
    background-image: -webkit-linear-gradient(top, @start-color @start-percent, @end-color @end-percent), -webkit-linear-gradient(bottom, @start-color @start-percent, @end-color @end-percent);
    background-image: linear-gradient(top, @start-color @start-percent, @end-color @end-percent), linear-gradient(bottom, @start-color @start-percent, @end-color @end-percent);
    background-image: -moz-linear-gradient(center top , @start-color @start-percent, @end-color @end-percent), -moz-linear-gradient(center bottom , @start-color @start-percent, @end-color @end-percent);
    background-repeat: no-repeat;
    background-position: 0 @start-percent, 0 @end-percent;
    background-size: @end-percent 10px;
  }
}


// COMPONENT MIXINS
// --------------------------------------------------

// Button variants - Overload Bootstrap's mixin
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
.button-variant(@start-color; @end-color; @color: #fff; @border-color: @btn-default-border) {
  border: 1px solid @border-color;
  color: @color;
  #gradient > .vertical(@start-color: @start-color; @end-color: @end-color);
  .reset-filter();
  text-shadow: 0 1px rgba(0, 0, 0, 0.1);

  &:hover {
    text-shadow: 0 1px rgba(0, 0, 0, 0.3);
    .box-shadow(0 1px 1px rgba(0, 0, 0, 0.2));
  }

  // in these cases the gradient won't cover the background, so we override
  &:hover,
  &:focus,
  &:active,
  &.active,
  .open .dropdown-toggle& {
    color: @color;
    border: 1px solid darken(@border-color, 5%);
    #gradient > .vertical(@start-color: @start-color; @end-color: darken(@end-color, 5%));
    .reset-filter();
    background-color: darken(@end-color, 5%);
  }
  &:active,
  &.active,
  .open .dropdown-toggle& {
    border: 1px solid darken(@border-color, 10%);
    text-shadow: 0 1px rgba(0, 0, 0, 0.3);
    #gradient > .vertical(@start-color: @start-color; @end-color: darken(@end-color, 10%));
    .reset-filter();
    .box-shadow(inset 0 1px 2px rgba(0, 0, 0, 0.3));
  }
  &:focus {
    border: 1px solid @border-color;
    .box-shadow(inset 0 0 0 1px #fff);
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      border: 1px solid @border-color;
      #gradient > .vertical(@start-color: @start-color; @end-color: @end-color);
      .reset-filter();
      background-color: @start-color;
      .box-shadow(none)
    }
  }

  .badge {
    color: @border-color;
    background-color: @color;
  }
}

// Navbar vertical align - Overload Bootstrap's mixin
// -------------------------
// Vertically center elements in the navbar or other bars.
// Example: an element has a height of 30px, so write out `.navbar-vertical-align(30px);` to calculate the appropriate top margin.
// Example: an element has a height of 30px and you want to vertically center it in a bar other than the navbar:
//          .navbar-vertical-align(32px; @navbar-toolbar-height);
.navbar-vertical-align(@element-height; @bar-height: @navbar-height) {
  margin-top: ((@bar-height - @element-height) / 2);
  margin-bottom: ((@bar-height - @element-height) / 2);
}


// Form validation states - Override Bootstrap's mixin
//
// Used in forms.less to generate the form validation CSS for warnings, errors,
// and successes.

.form-control-validation(@text-color: #555; @border-color: #ccc; @background-color: #f5f5f5) {
  // // Color the label text
  // .help-block,
  // .control-label,
  // .radio,
  // .checkbox,
  // .radio-inline,
  // .checkbox-inline  {
  //   color: @text-color;
  // }
  // Set the border and box shadow on specific inputs to match
  .form-control {
    // border-color: @border-color;
    .box-shadow(none);
    &:hover {
      border-color: @border-color;
      .box-shadow(0 1px 2px rgba(0, 0, 0, 0.1) inset);
    }
    &:focus {
      border-color: @border-color;
      .box-shadow(0 1px 2px rgba(0, 0, 0, 0.3) inset);
    }
  }
  // // Set validation states also for addons
  // .input-group-addon {
  //   color: @text-color;
  //   border-color: @border-color;
  //   background-color: @background-color;
  // }
  // // Optional feedback icon
  // .form-control-feedback {
  //   color: @text-color;
  // }
}

// Form control focus state - Override Bootstrap's mixin
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `@input-focus-border` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.

.form-control-focus(@color: @input-border-focus) {
  &:focus {
    // border-color: @color;
    // outline: 0;
    .box-shadow(inset 0 1px 2px rgba(0,0,0,0.3));
  }
}
